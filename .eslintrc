{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["react", "prettier", "@typescript-eslint", "react-hooks"],
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:react/recommended",
    "plugin:jest/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react-hooks/recommended",
    "airbnb",
    "plugin:react/jsx-runtime",
    "prettier"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2023,
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "globals": {
    "__DEV__": "readonly",
    "Atomics": "readonly",
    "JSX": "readonly",
    "NodeJS": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "ignorePatterns": ["package.json", "node_modules", "workspace"],
  "rules": {
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": ["PascalCase"],
        "selector": ["interface", "typeLike"]
      }
    ],
    "@typescript-eslint/no-misused-promises": [
      "warn",
      {
        "checksConditionals": true,
        "checksSpreads": true,
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-shadow": "error", // bug with typescript
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true,
        "allowBoolean": true,
        "allowAny": false,
        "allowNullish": true,
        "allowRegExp": false,
        "allowNever": false
      }
    ],
    "curly": ["error", "all"],
    "jest/no-disabled-tests": "off",
    "jest/no-focused-tests": "off",
    "jest/no-mocks-import": "off",
    "import/extensions": "off", // lots of false positives and tipescript manages properly
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["**/*.test.ts", "**/*.test.tsx", "config/test/test-utils.tsx"],
        "optionalDependencies": false,
        "peerDependencies": false,
        "bundledDependencies": false,
        "packageDir": ["./scripts"]
      }
    ], // allow imports absolute path
    "import/no-unresolved": "off", // lots of false positives and tipescript manages properly
    "import/order": [
      "error",
      {
        "pathGroups": [{ "pattern": "src/**", "group": "internal" }],
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": ["react", "src/**"],
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "no-console": "off",
    "no-nested-ternary": "off",
    "no-plusplus": "off",
    "no-shadow": "off", // bug with typescript, @typescript-eslint manages it
    "no-unused-vars": "off", // bug with typescript, @typescript-eslint manages it
    "@typescript-eslint/no-unused-vars": ["error", { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }],
    "no-void": ["error", { "allowAsStatement": true }],
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react/function-component-definition": [
      1,
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/jsx-filename-extension": [1, { "extensions": [".tsx"] }], // use react components only in tsx files, no jsx or ts
    "react/jsx-props-no-spreading": "off", // typescript checks values
    "react/prop-types": "off", // Since we do not use prop-types
    "react/require-default-props": "off", // Since we do not use prop-types
    "react/style-prop-object": "off" // inconsistent with some libraries in RN
  },
  "overrides": [
    {
      "files": ["__tests__/**", "__mocks__/**"],
      "plugins": ["jest"],
      "rules": {
        // you should turn the original rule off *only* for test files
        "@typescript-eslint/unbound-method": "off"
        // "jest/unbound-method": "error"
      }
    }
  ]
}
